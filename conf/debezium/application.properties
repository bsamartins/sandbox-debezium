io.bsamartins.kafka.bootstrap.servers=kafka:9092

debezium.source.offset.storage=org.apache.kafka.connect.storage.KafkaOffsetBackingStore

debezium.source.offset.storage.bootstrap.servers=${io.bsamartins.kafka.bootstrap.servers}
debezium.source.bootstrap.servers=${io.bsamartins.kafka.bootstrap.servers}
debezium.bootstrap.servers=${io.bsamartins.kafka.bootstrap.servers}
bootstrap.servers=${io.bsamartins.kafka.bootstrap.servers}

debezium.source.offset.storage.topic=debezium-offsets
debezium.source.offset.storage.partitions=1
debezium.source.offset.storage.replication.factor=1
debezium.source.offset.flush.interval.ms=0

debezium.source.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.source.database.hostname=host.docker.internal
debezium.source.database.port=5432
debezium.source.database.user=postgres
debezium.source.database.password=postgres
debezium.source.database.dbname=test-db
debezium.source.schema.include.list=public
debezium.source.database.server.name=debezium-server
debezium.source.plugin.name=pgoutput

debezium.sink.type=kafka
debezium.sink.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
debezium.sink.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
debezium.sink.kafka.producer.bootstrap.servers=${io.bsamartins.kafka.bootstrap.servers}

#quarkus.log.level=ALL
quarkus.log.console.json=false
